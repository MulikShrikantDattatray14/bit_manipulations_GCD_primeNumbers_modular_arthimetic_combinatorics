Problem Description :

Given an array of integers, every element appears thrice except for one, which occurs once.
Find that element that does not appear thrice.
NOTE: Your algorithm should have a linear runtime complexity.
Could you implement it without using extra memory?


Problem Constraints
2 <= A <= 5*106
0 <= A <= INTMAX


Input Format :
First and only argument of input contains an integer array A.


Output Format:
Return a single integer.



Example Input :
Input 1:
 A = [1, 2, 4, 3, 3, 2, 2, 3, 1, 1]
Input 2:
 A = [0, 0, 0, 1]

Example Output :
Output 1:
 4
Output 2:
 1


Example Explanation
Explanation 1:

 4 occurs exactly once in Input 1.
 1 occurs exactly once in Input 2.

 ================================================================================================================================================================

function singleNumber(A) {
  //idea-1
  let no = A.length;
  let ans = 0;

  for (let i = 0; i < 32; i++) {
    count = 0;
    for (let j = 0; j < no; j++) {
      // look for the jth in all the elements of the array
      if (((A[j] >> i) & 1) == 1) count++;
    }

    if (count % 3 == 1) ans = ans + (1 << i);
  }
  return Number(ans);
}
let A = [1, 1, 1, 3, 3, 3, 4];
let ans = singleNumber(A);
console.log(ans);


==================================================================================================================================================================