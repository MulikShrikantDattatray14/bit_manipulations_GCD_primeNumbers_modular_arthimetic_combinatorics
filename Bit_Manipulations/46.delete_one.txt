Problem Description :

Given an integer array A of size N. You have to delete one element such that the GCD(Greatest common divisor) of the remaining array is maximum.

Find the maximum value of GCD.

Problem Constraints
2 <= N <= 105
1 <= A[i] <= 109



Input Format:
First argument is an integer array A.

Output Format:
Return an integer denoting the maximum value of GCD.



Example Input:
Input 1:
 A = [12, 15, 18]
Input 2:
 A = [5, 15, 30]

Example Output
Output 1:
 6
Output 2:
 15


Example Explanation
Explanation 1:
 If you delete 12, gcd will be 3.
 If you delete 15, gcd will be 6.
 If you delete 18, gcd will 3.
 Maximum value of gcd is 6.
Explanation 2:
 If you delete 5, gcd will be 15.
 If you delete 15, gcd will be 5.
 If you delete 30, gcd will be 5.
 Maximum value of gcd is 15.

 ==============================================================================================================================================================================
//logic :  The general approach is to compute the GCD for each prefix and suffix of the array, excluding the element at that position. Then, the maximum GCD among all positions is returned as the final result.
 

 //We can maintain two arrays for prefix and suffix gcd, like we do for prefix sum and suffix sum.
//Then,for each index i from 1 to N, we can calculate gcd(prefix[i - 1], suffix[i + 1]).
//This value will the gcd of the array when the i-th element of the array is removed.
//We can return the maximum among all these values.

//Time Complexity : O(N)
//Space Complexity : O(N)

function gcd(a, b) {
  if (b == 0) return a;
  if (a == 0) return b;
  return gcd(b, a % b);
}
let A = [12, 15, 18];
let ans = solve(A);
console.log(ans);
function solve(A) {
  let suffixarr = A;
  let n = suffixarr.length;

  let ans = 0;
  let suffixfinal = [];
  for (let i = 0; i < n; i++) {
    ans = gcd(ans, suffixarr[i]);
    suffixfinal.push(ans);
  }
  console.log(suffixfinal);
  let top = suffixfinal;
  let prefixarr = suffixarr.reverse();
  let no = prefixarr.length;

  let ans1 = 0;
  let prefixfinal = [];
  for (let i = 0; i < no; i++) {
    ans1 = gcd(ans1, prefixarr[i]);
    prefixfinal.push(ans1);
  }

  let bottom = prefixfinal.reverse();
  console.log(prefixfinal);

  let gcdarray = [];
  let num = no - 2;
  let mul = gcd(0, bottom[1]);
  gcdarray.push(mul);
  let i;
  for (i = 0; i < num; i++) {
    mul = gcd(top[i], bottom[i + 2]);
    gcdarray.push(mul);
  }
  mul = gcd(top[i], 0);
  gcdarray.push(mul);
  console.log(gcdarray);
  return Math.max(...gcdarray);
}
